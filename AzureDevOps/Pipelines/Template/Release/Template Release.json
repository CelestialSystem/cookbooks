{"source":2,"revision":121,"description":null,"createdBy":{"displayName":"Varun Chopra","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/3d61d285-fce6-676a-a647-4bbe10ded415","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"}},"id":"3d61d285-fce6-676a-a647-4bbe10ded415","uniqueName":"VarunChopra@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1","descriptor":"aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"},"createdOn":"2020-08-18T06:16:02.673Z","modifiedBy":{"displayName":"Varun Chopra","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/3d61d285-fce6-676a-a647-4bbe10ded415","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"}},"id":"3d61d285-fce6-676a-a647-4bbe10ded415","uniqueName":"VarunChopra@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1","descriptor":"aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"},"modifiedOn":"2020-08-31T11:28:02.387Z","isDeleted":false,"lastRelease":{"id":142,"name":"Release-32","artifacts":[],"_links":{},"description":"","releaseDefinition":{"id":11,"projectReference":null,"_links":{}},"createdOn":"2020-08-29T06:19:22.707Z","createdBy":{"displayName":"Ashutosh Kumar","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/880010e2-da76-61f6-8f75-832ca079cfd4","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.ODgwMDEwZTItZGE3Ni03MWY2LThmNzUtODMyY2EwNzljZmQ0"}},"id":"880010e2-da76-61f6-8f75-832ca079cfd4","uniqueName":"AshutoshKumar@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.ODgwMDEwZTItZGE3Ni03MWY2LThmNzUtODMyY2EwNzljZmQ0","descriptor":"aad.ODgwMDEwZTItZGE3Ni03MWY2LThmNzUtODMyY2EwNzljZmQ0"}},"variables":{"CookbooksSource":{"value":"$(System.DefaultWorkingDirectory)\\cookbooks"},"imageReleaseState":{"value":"Preview"},"LansaReleaseTemplateUrl":{"value":"https://raw.githubusercontent.com/lansa/azure-quickstart-templates/support/scalable/lansa-vmss-windows-autoscale-sql-database/mainTemplate.json","allowOverride":true}},"variableGroups":[1,5,3],"environments":[{"id":73,"name":"Regression Testing","rank":1,"owner":{"displayName":"Varun Chopra","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/3d61d285-fce6-676a-a647-4bbe10ded415","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"}},"id":"3d61d285-fce6-676a-a647-4bbe10ded415","uniqueName":"VarunChopra@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1","descriptor":"aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"},"variables":{},"variableGroups":[],"preDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":220}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":1}},"deployStep":{"id":225},"postDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":226}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":2}},"deployPhases":[{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":1,"phaseType":1,"name":"Agent job : SQLAZURE1","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: SQLAZURE1-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"SQLAZURE1-TEST","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2012\" -lansaVersion \"V14 SP2\" -imageReleaseState \"$(imageReleaseState)\" -msiURL \"$(msiURL)\" -stackName \"SQL1VMSS\" -applicationGatewaySkuTier \"Standard\" -applicationGatewaySkuName \"Standard_Small\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Basic\" -requestedServiceObjectiveName \"Basic\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"SQLAZURE1","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"SQLAZURE1-TEST","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL Tests","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w12r2d-14-2-$(TestVersion-w12r2d-14-2)\"\n} else {\n    $SkuName = \"w12r2d-14-2-$(TestVersionPrev-w12r2d-14-2)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"SQLAZURE1-TEST\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : SQLAZURE1-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"SQLAZURE1-TEST","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":2,"phaseType":1,"name":"Agent job : SQLAZURE2","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: SQLAZURE2-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"SQLAZURE2-TEST","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2019\" -lansaVersion \"V14 SP2\" -imageReleaseState \"Preview\" -msiURL \"$(msiURL)\" -stackName \"SQL2VMSS\" -applicationGatewaySkuTier \"Standard\" -applicationGatewaySkuName \"Standard_Medium\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Standard\" -requestedServiceObjectiveName \"S0\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"SQLAZURE2","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"SQLAZURE2-TEST","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL Tests","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w19d-14-2-$(TestVersion-w19d-14-2)\"\n} else {\n    $SkuName = \"w19d-14-2-$(TestVersionPrev-w19d-14-2)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"SQLAZURE2-TEST\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : SQLAZURE2-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"SQLAZURE2-TEST","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":3,"phaseType":1,"name":"Agent job : SQLAZURE3","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: SQLAZURE3-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"SQLAZURE3-TEST","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2016\" -lansaVersion \"V14 SP2\" -imageReleaseState \"Preview\" -msiURL \"$(msiURL)\" -stackName \"SQL3VMSS\" -applicationGatewaySkuTier \"Standard\" -applicationGatewaySkuName \"Standard_Large\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Standard\" -requestedServiceObjectiveName \"S4\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"SQLAZURE3","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"SQLAZURE3-TEST","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL Tests","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w16d-14-2-$(TestVersion-w16d-14-2)\"\n} else {\n    $SkuName = \"w16d-14-2-$(TestVersionPrev-w16d-14-2)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"SQLAZURE3-TEST\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : SQLAZURE3-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"SQLAZURE3-TEST","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":4,"phaseType":1,"name":"Agent job : SQLAZURE4","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: SQLAZURE4-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"SQLAZURE4-TEST","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2019\" -lansaVersion \"V15 GA\" -imageReleaseState \"Preview\" -msiURL \"https://lansalpcmsdn.blob.core.windows.net/app/test/AWAMAPP_v15.0.0_en-us.msi\" -stackName \"SQL4VMSS\" -applicationGatewaySkuTier \"WAF\" -applicationGatewaySkuName \"WAF_Medium\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Standard\" -requestedServiceObjectiveName \"S12\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"SQLAZURE4","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"SQLAZURE4-TEST","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL Tests","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w19d-15-0-$(TestVersion-w19d-15-0)\"\n} else {\n    $SkuName = \"w19d-15-0-$(TestVersionPrev-w19d-15-0)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"SQLAZURE4-TEST\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : SQLAZURE4-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"SQLAZURE4-TEST","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":5,"phaseType":1,"name":"Agent job : SQLAZURE5","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: SQLAZURE5-TemplateTest ","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"SQLAZURE5-TEST","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2016\" -lansaVersion \"V15 GA\" -imageReleaseState \"Preview\" -msiURL \"https://lansalpcmsdn.blob.core.windows.net/app/test/AWAMAPP_v15.0.0_en-us.msi\" -stackName \"SQL5VMSS\" -applicationGatewaySkuTier \"WAF\" -applicationGatewaySkuName \"WAF_Large\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Premium\" -requestedServiceObjectiveName \"P1\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"SQLAZURE5","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"SQLAZURE5-TEST","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL Tests","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w16d-15-0-$(TestVersion-w16d-15-0)\"\n} else {\n    $SkuName = \"w16d-15-0-$(TestVersionPrev-w16d-15-0)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"SQLAZURE5-TEST\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : SQLAZURE5-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"SQLAZURE5-TEST","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":6,"phaseType":1,"name":"Agent job : SQLAZURE6","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: SQLAZURE6-TemplateTest ","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"SQLAZURE6-TEST","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2012\" -lansaVersion \"V15 GA\" -imageReleaseState \"Preview\" -msiURL \"https://lansalpcmsdn.blob.core.windows.net/app/test/AWAMAPP_v15.0.0_en-us.msi\" -stackName \"SQL6VMSS\" -applicationGatewaySkuTier \"WAF\" -applicationGatewaySkuName \"WAF_Large\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Premium\" -requestedServiceObjectiveName \"P11\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"SQLAZURE6","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"SQLAZURE6-TEST","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w12r2d-15-0-$(TestVersion-w12r2d-15-0)\"\n} else {\n    $SkuName = \"w12r2d-15-0-$(TestVersionPrev-w12r2d-15-0)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"SQLAZURE6-TEST\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : SQLAZURE6-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"SQLAZURE6-TEST","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":7,"phaseType":1,"name":"Agent job : MYSQL1","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: MySQL1DB","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"mysql1Test","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/DatabaseDeploymentTemplates/mysqlTemplate.json","csmParametersFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/DatabaseDeploymentTemplates/mysqlParameters.json","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"mysql1Test","deploymentOutputs":"mysqldb1deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output Db","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(mysqldb1deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: MYSQL1-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"MYSQL1","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2012\" -lansaVersion \"V14 SP2\" -imageReleaseState \"Preview\" -msiURL \"$(msiURL)\" -stackName \"SQL1VMSS\" -applicationGatewaySkuTier \"Standard\" -applicationGatewaySkuName \"Standard_Small\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Basic\" -requestedServiceObjectiveName \"Basic\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"MYSQL1","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging db","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"mysql1Test","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"MYSQL1","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w12r2d-14-2-$(TestVersion-w12r2d-14-2)\"\n} else {\n    $SkuName = \"w12r2d-14-2-$(TestVersionPrev-w12r2d-14-2)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"MYSQL1\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : MYSQL1DB","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"mysql1Test","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : MYSQL1-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"MYSQL1","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":8,"phaseType":1,"name":"Agent job : MSSQLS1","refName":null,"workflowTasks":[{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: MSSQLS1DB","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"mssqls1Test","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/DatabaseDeploymentTemplates/sqlServerTemplate.json","csmParametersFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/DatabaseDeploymentTemplates/sqlServerParameters.json","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"mssqls1Test","deploymentOutputs":"mssqlsdb1deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell script: GetServerIP","refName":"sqlDBOutput","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"# Print the Deployment Output\nWrite-Host \"$(mssqlsdb1deploymentOutput)\" | out-default | Write-Verbose\n$deploymentOutput =ConvertFrom-Json '$(mssqlsdb1deploymentOutput)'\n$pipName = $deploymentOutput.publicIpAddressName.value\n$output = Get-AzPublicIpAddress -Name $pipName -ResourceGroupName \"mssqls1Test\"\n$vmIP = $output.IpAddress\nWrite-Host \"##vso[task.setvariable variable=pip;isOutput=true]$vmIP\" | Out-Default | Write-Verbose ","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: MSSQLS1-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"MSSQLS1","location":"Australia East","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2012\" -lansaVersion \"V14 SP2\" -imageReleaseState \"Preview\" -msiURL \"$(msiURL)\" -stackName \"MSSQL1VMSS\" -applicationGatewaySkuTier \"Standard\" -applicationGatewaySkuName \"Standard_Medium\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"existing\" -databaseType \"MSSQLS\" -databaseServerName \"$(sqlDBOutput.pip)\" -databaseName \"lansa\" -databaseLogin \"lansa\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Standard\" -requestedServiceObjectiveName \"S2\"  -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"MSSQLS1","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging db","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"mssqls1Test","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"MSSQLS1","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell : Test Image Version","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w12r2d-14-2-$(TestVersion-w12r2d-14-2)\"\n} else {\n    $SkuName = \"w12r2d-14-2-$(TestVersionPrev-w12r2d-14-2)\"\n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"MSSQLS1\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\nif($result.Value[1].message -eq \"\") {\n    Write-Host \"Tested the image version in the VMSS successfully.\"\n} else {\n    throw $result.Value[1].message\n}","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : MSSQLS1DB","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"mssqls1Test","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"Cleanup ARM Template : MSSQLS1-TemplateTest","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"MSSQLS1","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]}],"environmentOptions":{"emailNotificationType":"OnlyOnFailure","emailRecipients":"release.environment.owner;release.creator","skipArtifactsDownload":false,"timeoutInMinutes":0,"enableAccessToken":false,"publishDeploymentStatus":true,"badgeEnabled":false,"autoLinkWorkItems":false,"pullRequestDeploymentEnabled":false},"demands":[],"conditions":[{"name":"ReleaseStarted","conditionType":1,"value":""}],"executionPolicy":{"concurrencyCount":1,"queueDepthCount":0},"schedules":[],"currentRelease":{"id":142,"url":"https://vsrm.dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/Release/releases/142","_links":{}},"retentionPolicy":{"daysToKeep":30,"releasesToKeep":3,"retainBuild":true},"processParameters":{},"properties":{"BoardsEnvironmentType":{"$type":"System.String","$value":"unmapped"},"LinkBoardsWorkItems":{"$type":"System.String","$value":"False"}},"preDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"postDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"environmentTriggers":[],"badgeUrl":"https://vsrm.dev.azure.com/VisualLansa/_apis/public/Release/badge/8b247587-8424-435c-9068-7e9fdd0edcf1/11/73"},{"id":74,"name":"Production Stage","rank":2,"owner":{"displayName":"Varun Chopra","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/3d61d285-fce6-676a-a647-4bbe10ded415","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"}},"id":"3d61d285-fce6-676a-a647-4bbe10ded415","uniqueName":"VarunChopra@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1","descriptor":"aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"},"variables":{},"variableGroups":[],"preDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":221}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":1}},"deployStep":{"id":224},"postDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":227}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":2}},"deployPhases":[{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":1,"phaseType":2,"name":"Manual Intervention : Deploy Template","refName":null,"workflowTasks":[{"environment":{},"taskId":"bcb64569-d51a-4af0-9c01-ea5d05b3b622","version":"8.*","name":"Manual Intervention : Production Template","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"instructions":"Deploy the template to the Production Stage\n","emailRecipients":"","onTimeout":"reject"}}]}],"environmentOptions":{"emailNotificationType":"OnlyOnFailure","emailRecipients":"release.environment.owner;release.creator","skipArtifactsDownload":false,"timeoutInMinutes":0,"enableAccessToken":false,"publishDeploymentStatus":true,"badgeEnabled":false,"autoLinkWorkItems":false,"pullRequestDeploymentEnabled":false},"demands":[],"conditions":[{"name":"Regression Testing","conditionType":2,"value":"4"}],"executionPolicy":{"concurrencyCount":1,"queueDepthCount":0},"schedules":[],"currentRelease":{"id":142,"url":"https://vsrm.dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/Release/releases/142","_links":{}},"retentionPolicy":{"daysToKeep":30,"releasesToKeep":3,"retainBuild":true},"processParameters":{},"properties":{"BoardsEnvironmentType":{"$type":"System.String","$value":"unmapped"},"LinkBoardsWorkItems":{"$type":"System.String","$value":"False"}},"preDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"postDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"environmentTriggers":[],"badgeUrl":"https://vsrm.dev.azure.com/VisualLansa/_apis/public/Release/badge/8b247587-8424-435c-9068-7e9fdd0edcf1/11/74"},{"id":75,"name":"Production Tests","rank":3,"owner":{"displayName":"Varun Chopra","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/3d61d285-fce6-676a-a647-4bbe10ded415","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"}},"id":"3d61d285-fce6-676a-a647-4bbe10ded415","uniqueName":"VarunChopra@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1","descriptor":"aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"},"variables":{},"variableGroups":[],"preDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":222}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":1}},"deployStep":{"id":223},"postDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":228}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":2}},"deployPhases":[{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"windows-2019"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":9,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"succeeded()","overrideInputs":{}},"rank":1,"phaseType":1,"name":"Agent job : US Deployment Test","refName":null,"workflowTasks":[{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Download from Azure Quick Start Template","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Replace the main template from the release URL\nInvoke-WebRequest -Uri \"$(LansaReleaseTemplateUrl)\" -OutFile \"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json\" -verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: US Region","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"Create Or Update Resource Group","resourceGroupName":"TemplateProd-Test","location":"East US","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"$(System.DefaultWorkingDirectory)/_Lansa Templates - Azure Quick Start/Solution Template/mainTemplate.json","csmParametersFile":"","overrideParameters":"-osName \"Windows Server 2012\" -lansaVersion \"V14 SP2\" -imageReleaseState \"$(imageReleaseState)\" -msiURL \"$(msiURL)\" -stackName \"SQL1VMSS\" -applicationGatewaySkuTier \"Standard\" -applicationGatewaySkuName \"Standard_Small\" -certificateBase64Encoded \"$(certificateBase64Encoded)\" -certificatePassword \"$(certificatePassword)\" -databaseNewOrExisting \"new\" -databaseLogin \"$(databaseLogin)\" -databaseLoginPassword \"$(databaseLoginPassword)\" -edition \"Basic\" -requestedServiceObjectiveName \"Basic\" -adminUsername \"$(adminUsername)\" -adminPassword \"$(adminPassword)\" -webUsername \"$(webUsername)\" -webPassword \"$(webPassword)\" -gitBranch \"support/scalable\"","deploymentMode":"Incremental","deploymentName":"TemplateProd","deploymentOutputs":"deploymentOutput","addSpnToEnvironment":"true"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Print Deployment Output","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Print the Deployment Output\nWrite-Host \"$(deploymentOutput)\" | out-default | Write-Verbose","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"567f7830-5655-4d11-b4c5-bada59a77796","version":"1.*","name":"Azure Resource Group Tagging","refName":"","enabled":true,"alwaysRun":false,"continueOnError":true,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"always()","inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"TemplateProd-Test","Key":"Usage","Value":"test-temp"}},{"environment":{},"taskId":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","version":"2.*","name":"Test ARM Deployment : URL Tests","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Use the deployment output to extract the IpAddress\n$sqlazureDeploymentOutput=ConvertFrom-Json '$(deploymentOutput)'\n$IpAddress = $sqlazureDeploymentOutput.lbFqdn.value\n$url1 = \"$IpAddress/cgi-bin/probe\"\n$url2 = \"$IpAddress/cgi-bin/lansaweb?about\"\n$url3 = \"$IpAddress/cgi-bin/lansaweb?wam=DEPTABWA&webrtn=BuildFirst&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$url4 = \"$IpAddress/cgi-bin/lansaweb?wam=JSMLICE&webrtn=weblic&ml=LANSA:XHTML&part=DEX&lang=ENG\"\n$urls = @($url1, $url2, $url3, $url4)\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n$failureCount = 0\nforEach($url in $urls) {\n    try{\n        $response = Invoke-WebRequest -Uri $url -TimeoutSec 14\n        $ResponseCode = $response.StatusCode\n        if($ResponseCode -ne 200) {\n            Write-Host \"Response code not equal to 200: $ResponseCode\" | Out-Default | Write-Verbose\n            $failureCount = $failureCount + 1\n        } else {\n            Write-Host $ResponseCode | Out-Default | Write-Verbose\n        }\n    } catch {\n        Write-Host $_.Exception | Out-Default | Write-Verbose\n        $ResponseCode = $_.Exception.Response.StatusCode.Value__\n        $failureCount = $failureCount + 1\n        Write-Host $ResponseCode | Out-Default | Write-Verbose\n    }\n}\nif($failureCount) {\n    Write-Host \"Request failed for $($failureCount) URL(s)\"\n    throw \"$(Log-Date) The deployment failed the URL tests\"\n} else {\n    Write-Host \"Successfully tested all URL(s)\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"72a1931b-effb-4d2e-8fd8-f8472a07cb62","version":"5.*","name":"Azure PowerShell script: InlineScript","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"ConnectedServiceNameARM":"e61ac796-c298-4e1f-a8dc-98fb50faa590","ScriptType":"InlineScript","ScriptPath":"","Inline":"Install-Module -Name Az.Compute -AllowClobber -Force\nif (\"$(imageReleaseState)\" -eq \"Production\") {\n    $SkuName = \"w12r2d-14-2-$(TestVersionPrev-w12r2d-14-2)\"\n} else {\n    $SkuName = \"w12r2d-14-2-$(TestVersion-w12r2d-14-2)\"   \n}\nWrite-Host $SkuName | Out-Default\n\n$var=ConvertFrom-Json '$(deploymentOutput)'\n\n# Download TestImageVersion PS Script\nNew-Item -Path \"$(CookbooksSource)\\Tests\\Tests\" -ItemType Directory -verbose\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/robe070/cookbooks/$(CookbooksBranch)/Tests/TestImageVersion.ps1\" -OutFile \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -verbose\n\n$vmssName = $var.scalesetName.value\nWrite-Host $vmssName | Out-Default\n\n # Execute the TestImageVersion PS Script\nWrite-Host \"Test the image version $SkuName by executing the script in the VMSS $vmssName\" | Out-Default | Write-Verbose\n$result = Invoke-AzVmssVMRunCommand -ResourceGroupName \"TemplateProd-Test\" -VMScaleSetName $vmssName -InstanceId '0' -CommandId 'RunPowerShellScript' -ScriptPath \"$(CookbooksSource)\\Tests\\TestImageVersion.ps1\" -Parameter @{ImgName = $SkuName}\n$result | Out-Default | Write-Host\n$result.Value | Out-Default | Write-Host\nWrite-Host \"Tested the image version in the VMSS successfully.\"","ScriptArguments":"","errorActionPreference":"stop","FailOnStandardError":"false","TargetAzurePs":"LatestVersion","CustomTargetAzurePs":"","pwsh":"false","workingDirectory":""}},{"environment":{},"taskId":"94a74903-f93f-4075-884f-dc11f34058b4","version":"3.*","name":"ARM Template deployment: Resource Group scope","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"TemplateProd-Test","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}]}],"environmentOptions":{"emailNotificationType":"OnlyOnFailure","emailRecipients":"release.environment.owner;release.creator","skipArtifactsDownload":false,"timeoutInMinutes":0,"enableAccessToken":false,"publishDeploymentStatus":true,"badgeEnabled":false,"autoLinkWorkItems":false,"pullRequestDeploymentEnabled":false},"demands":[],"conditions":[{"name":"Production Stage","conditionType":2,"value":"4"}],"executionPolicy":{"concurrencyCount":1,"queueDepthCount":0},"schedules":[],"currentRelease":{"id":67,"url":"https://vsrm.dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/Release/releases/67","_links":{}},"retentionPolicy":{"daysToKeep":30,"releasesToKeep":3,"retainBuild":true},"processParameters":{},"properties":{"BoardsEnvironmentType":{"$type":"System.String","$value":"unmapped"},"LinkBoardsWorkItems":{"$type":"System.String","$value":"False"}},"preDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"postDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"environmentTriggers":[],"badgeUrl":"https://vsrm.dev.azure.com/VisualLansa/_apis/public/Release/badge/8b247587-8424-435c-9068-7e9fdd0edcf1/11/75"}],"artifacts":[{"sourceId":"8b247587-8424-435c-9068-7e9fdd0edcf1:5","type":"Build","alias":"_Lansa Templates - Azure Quick Start","definitionReference":{"artifactSourceDefinitionUrl":{"id":"https://dev.azure.com/VisualLansa/_permalink/_build/index?collectionId=556ac44f-caae-4fef-a5b6-d964fed453e6&projectId=8b247587-8424-435c-9068-7e9fdd0edcf1&definitionId=5","name":""},"defaultVersionBranch":{"id":"","name":""},"defaultVersionSpecific":{"id":"","name":""},"defaultVersionTags":{"id":"","name":""},"defaultVersionType":{"id":"latestType","name":"Latest"},"definition":{"id":"5","name":"Lansa Templates - Azure Quick Start"},"definitions":{"id":"","name":""},"IsMultiDefinitionType":{"id":"False","name":"False"},"project":{"id":"8b247587-8424-435c-9068-7e9fdd0edcf1","name":"Lansa Azure Scalable License Images"},"repository":{"id":"","name":""}},"isPrimary":true,"isRetained":false},{"sourceId":"7492bde4-cf4a-4da9-a127-66ad77b0c3c3:robe070/cookbooks","type":"GitHub","alias":"_robe070_cookbooks","definitionReference":{"artifactSourceDefinitionUrl":{"id":"https://github.com/robe070/cookbooks","name":""},"branch":{"id":"debug/paas","name":"debug/paas"},"checkoutNestedSubmodules":{"id":"True","name":"Any nested submodules within"},"checkoutSubmodules":{"id":"","name":""},"connection":{"id":"7492bde4-cf4a-4da9-a127-66ad77b0c3c3","name":"robe070"},"defaultVersionSpecific":{"id":"","name":""},"defaultVersionType":{"id":"latestFromBranchType","name":"Latest from the default branch"},"definition":{"id":"robe070/cookbooks","name":"robe070/cookbooks"},"fetchDepth":{"id":"","name":""},"gitHubRepositoryId":{"id":"22703660","name":"22703660"},"gitLfsSupport":{"id":"","name":""}},"isRetained":false}],"triggers":[],"releaseNameFormat":"Release-$(rev:r)","tags":[],"properties":{"DefinitionCreationSource":{"$type":"System.String","$value":"ReleaseClone"},"IntegrateBoardsWorkItems":{"$type":"System.String","$value":"False"},"IntegrateJiraWorkItems":{"$type":"System.String","$value":"false"}},"id":11,"name":"Template Release","path":"\\Lansa","projectReference":null,"url":"https://vsrm.dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/Release/definitions/11","_links":{"self":{"href":"https://vsrm.dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/Release/definitions/11"},"web":{"href":"https://dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_release?definitionId=11"}}}